apply plugin: 'maven'
apply plugin: 'signing'

ext {
	isReleaseVersion = version.endsWith("RELEASE")
	isMilestoneVersion = version.matches('[0-9].[0-9].[0-9].M[0-9]+') || version.matches('[0-9].[0-9].[0-9].RC[0-9]+')
}

uploadArchives.dependsOn { [check] }

ext {
	repositoryUrl = "https://repo.spring.io/plugins-release-local"
	snapshotRepositoryUrl = "https://repo.spring.io/plugins-snapshot-local"
	repoUrl = (isReleaseVersion || isMilestoneVersion) ? repositoryUrl : snapshotRepositoryUrl
}

afterEvaluate {
	uploadArchives {
		repositories {
			mavenDeployer {
				// POM signature
				if (isReleaseVersion) {
					beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
				}
				// Target repository
				repository(url: repoUrl) {
					authentication(userName: repoUser, password: repoPass)
				}
				pom.project {
					name "$project.name"
					packaging 'jar'
					description 'Consumer Driven Contract Verifier and Stub Runner'
					url 'https://github.com/spring-cloud/spring-cloud-contract'
					inceptionYear '2014'

					scm {
						connection 'scm:git:git@github.com:spring-cloud/spring-cloud-contract.git'
						developerConnection 'scm:git:git@github.com:spring-cloud/spring-cloud-contract.git'
						url 'https://github.com/spring-cloud/spring-cloud-contract'
					}

					licenses {
						license {
							name 'The Apache License, Version 2.0'
							url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
						}
					}

					developers {
						developer {
							id 'jkubrynski'
							name 'Jakub Kubrynski'
							email 'jk ATT codearte DOTT io'
						}
						developer {
							id 'marcingrzejszczak'
							name 'Marcin Grzejszczak'
							email 'marcin ATT grzejszczak DOTT pl'
						}
					}
				}
			}
		}
	}
}

String repoPrefix() {
	return project.name.contains('gradle') ? 'plugins' : 'libs'
}